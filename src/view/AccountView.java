/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.lang.reflect.Array;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;

import dao.EmployeeDAO;
import dao.UserDAO;
import model.EmployeeModel;
import model.UserModel;

/**
 *
 * @author manht
 */
public class AccountView extends javax.swing.JFrame {
    private ArrayList<EmployeeModel> listEmployee;
    private DefaultTableModel tableModel;
    private HomeView homeView;

    /**
     * Creates new form AccountView
     */
    public AccountView() {
        initComponents();
        tableModel = (DefaultTableModel) tblAccount.getModel();
    }

    public void fillComboBoxEmployee() {
        comboBoxEmployee.removeAllItems();
        comboBoxEmployee.addItem("-- Chọn nhân viên --");
        for (EmployeeModel employee : listEmployee) {
            comboBoxEmployee.addItem(employee.getEmployeeName());
        }
    }

    public void showDataAccountTable() {
        tableModel.setRowCount(0);
        ArrayList<UserModel> listUser = UserDAO.getAllUser();
        for (UserModel user : listUser) {
            String name = UserDAO.getEmployeeNameByUserName(user.getUsername());
            tableModel.addRow(new Object[] { user.getUsername(), user.getType(), name });
        }
    }

    public void setAddAccountView() {
        this.btnSaveAccount.setText("Thêm tài khoản");
        this.rdbtnAdd.setSelected(true);
        this.tblAccount.clearSelection();
        this.comboBoxEmployee.setEnabled(true);
        this.comboBoxEmployee.setSelectedIndex(0);
        this.comboBoxType.setSelectedIndex(0);
        this.txtUserName.setText("");
        this.txtUserName.setEditable(true);
        this.txtPassword.setText("");
        this.txtPassConfirm.setText("");
        this.btnSaveAccount.setEnabled(true);
    }

    public void setDeleteAccountView() {
        this.txtUserName.setEditable(false);
        this.txtUserName.setText("");
        this.comboBoxEmployee.setEnabled(true);
        this.comboBoxEmployee.setForeground(Color.black);
        this.txtPassword.setText("");
        this.txtPassConfirm.setText("");
        this.btnSaveAccount.setEnabled(false);
        this.btnSaveAccount.setText("Xoá tài khoản");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        txtUserName = new javax.swing.JTextField();
        lbUserName = new javax.swing.JLabel();
        lbEmployee = new javax.swing.JLabel();
        lbType = new javax.swing.JLabel();
        btnSaveAccount = new javax.swing.JButton();
        comboBoxEmployee = new javax.swing.JComboBox<>();
        rdbtnDelete = new javax.swing.JRadioButton();
        rdbtnAdd = new javax.swing.JRadioButton();
        lbPassConfirm = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtPassConfirm = new javax.swing.JPasswordField();
        lbPassword = new javax.swing.JLabel();
        comboBoxType = new javax.swing.JComboBox<>();
        lbIcon = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbTitle.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(204, 0, 0));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("QUẢN LÝ TÀI KHOẢN");
        jPanel1.add(lbTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 490, -1));

        btnBack.setBackground(new java.awt.Color(255, 255, 204));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Trở về");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, -1, -1));

        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "UserName", "Loại tài khoản", "Nhân viên"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblAccount.setRowHeight(30);
        tblAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAccount);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 508, 420));

        txtUserName.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jPanel1.add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 170, 300, 30));

        lbUserName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lbUserName.setText("Tên đăng nhập");
        jPanel1.add(lbUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, 268, 22));

        lbEmployee.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lbEmployee.setText("Nhân viên");
        jPanel1.add(lbEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 210, 268, 22));

        lbType.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lbType.setText("Loại tài khoản");
        jPanel1.add(lbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 268, 22));

        btnSaveAccount.setBackground(new java.awt.Color(255, 153, 153));
        btnSaveAccount.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnSaveAccount.setText("Lưu tài khoản");
        btnSaveAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAccountActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 500, 170, 38));

        comboBoxEmployee.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        comboBoxEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Chọn nhân viên -- " }));
        comboBoxEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEmployeeActionPerformed(evt);
            }
        });
        comboBoxEmployee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comboBoxEmployeeKeyReleased(evt);
            }
        });
        jPanel1.add(comboBoxEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 300, 30));

        buttonGroup1.add(rdbtnDelete);
        rdbtnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdbtnDelete.setText("Xoá tài khoản");
        rdbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(rdbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, 139, 23));

        buttonGroup1.add(rdbtnAdd);
        rdbtnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdbtnAdd.setText("Thêm tài khoản");
        rdbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnAddActionPerformed(evt);
            }
        });
        jPanel1.add(rdbtnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, 123, 24));

        lbPassConfirm.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lbPassConfirm.setText("Xác nhận mật khẩu");
        jPanel1.add(lbPassConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, 149, 22));

        txtPassword.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 380, 300, 30));

        txtPassConfirm.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jPanel1.add(txtPassConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 450, 300, 30));

        lbPassword.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lbPassword.setText("Mật khẩu");
        jPanel1.add(lbPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 350, 268, 22));

        comboBoxType.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        comboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "-- Chọn loại tài khoản", "Manager", "Employee" }));
        comboBoxType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comboBoxTypeKeyReleased(evt);
            }
        });
        jPanel1.add(comboBoxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 310, 300, 30));

        lbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pinglogo.png"))); // NOI18N
        jPanel1.add(lbIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 80));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bgyellow.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1, Short.MAX_VALUE)));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxEmployeeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_comboBoxEmployeeActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_comboBoxEmployeeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        homeView = new HomeView();
        homeView.setVisible(true);
        this.dispose();
    }// GEN-LAST:event_btnBackActionPerformed

    private void btnSaveAccountActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveAccountActionPerformed
        // TODO add your handling code here:
        String name = this.txtUserName.getText();
        String password = new String(this.txtPassword.getPassword());
        String passConfirm = new String(this.txtPassConfirm.getPassword());
        String type = "";
        UserModel userLogin = UserDAO.getUserLogin();
        if (name.equals(userLogin.getUsername())) {
            JOptionPane.showMessageDialog(rootPane, "Không thể xoá thông tin tài khoản đang đăng nhập", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            fillData(tblAccount.getSelectedRow());
            return;
        }
        if (this.txtUserName.getText().equals("") || this.comboBoxEmployee.getSelectedIndex() == 0
                || this.comboBoxType.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Điền đầy đủ thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (password.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Mật khẩu không được để trống", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else if (!password.equals(passConfirm)) {
            JOptionPane.showMessageDialog(rootPane, "Mật khẩu không khớp", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            if (this.rdbtnAdd.isSelected()) {
                if (comboBoxType.getSelectedItem().equals("Manager")) {
                    type = "manager";
                } else {
                    type = "employee";
                }
                int id = 0;
                for (EmployeeModel employee : listEmployee) {
                    if (employee.getEmployeeName().equals(comboBoxEmployee.getSelectedItem())) {
                        id = employee.getId();
                    }
                }
                UserModel user = new UserModel(name, password, type, id);
                if (UserDAO.isExisted(id)) {
                    JOptionPane.showMessageDialog(rootPane, "Nhân viên đã có tài khoản", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    if (UserDAO.addUser(user)) {
                        JOptionPane.showMessageDialog(rootPane, "Thêm tài khoản thành công", "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);
                        this.txtUserName.setText("");
                        this.txtPassword.setText("");
                        this.txtPassConfirm.setText("");
                        this.comboBoxEmployee.setSelectedIndex(0);
                        this.comboBoxType.setSelectedIndex(0);
                        this.rdbtnAdd.setSelected(true);
                        this.btnSaveAccount.setEnabled(true);
                        this.showDataAccountTable();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Thêm tài khoản thất bại", "Lỗi",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            } else {
                if (!(UserDAO.checkLogin(userLogin.getUsername(), passConfirm))) {
                    JOptionPane.showMessageDialog(rootPane, "Mật khẩu không đúng", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    int result = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn xoá tài khoản này không?",
                            "Xác nhận xoá tài khoản", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        if (UserDAO.deleteUser(name)) {
                            JOptionPane.showMessageDialog(rootPane, "Xoá tài khoản thành công", "Thông báo",
                                    JOptionPane.INFORMATION_MESSAGE);
                            this.txtUserName.setText("");
                            this.txtPassword.setText("");
                            this.txtPassConfirm.setText("");
                            this.comboBoxEmployee.setSelectedIndex(0);
                            this.comboBoxType.setSelectedIndex(0);
                            this.rdbtnAdd.setSelected(true);
                            this.btnSaveAccount.setEnabled(true);
                            this.showDataAccountTable();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Xoá tài khoản thất bại", "Lỗi",
                                    JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                }
            }
        }
    }// GEN-LAST:event_btnSaveAccountActionPerformed

    public void fillData(int row) {
        setDeleteAccountView();
        this.rdbtnDelete.setSelected(true);
        this.txtUserName.setText(this.tblAccount.getValueAt(row, 0).toString());
        if (this.tblAccount.getValueAt(row, 1).toString().equals("manager")) {
            this.comboBoxType.setSelectedIndex(1);
        } else {
            this.comboBoxType.setSelectedIndex(2);
        }
        this.comboBoxEmployee.setSelectedItem(this.tblAccount.getValueAt(row, 2).toString());
        this.btnSaveAccount.setEnabled(true);
    }

    private void tblAccountMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblAccountMouseClicked
        // TODO add your handling code here:
        int row = this.tblAccount.getSelectedRow();
        if (row == -1) {
            return;
        } else {
            fillData(row);
        }
    }// GEN-LAST:event_tblAccountMouseClicked

    private void rdbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rdbtnUpdateActionPerformed
        // TODO add your handling code here:
        this.comboBoxEmployee.setEnabled(false);
        setDeleteAccountView();
        showDataAccountTable();
    }// GEN-LAST:event_rdbtnUpdateActionPerformed

    private void rdbtnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rdbtnAddActionPerformed
        // TODO add your handling code here:
        setAddAccountView();
    }// GEN-LAST:event_rdbtnAddActionPerformed

    private void comboBoxTypeKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_comboboxTypeKeyReleased
        // TODO add your handling code here:
    }// GEN-LAST:event_comboboxTypeKeyReleased

    private void comboBoxEmployeeKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_comboboxEmployeeKeyReleased
        // TODO add your handling code here:
    }// GEN-LAST:event_comboboxEmployeeKeyReleased

    private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        listEmployee = EmployeeDAO.getListEmployees();
        fillComboBoxEmployee();
        setAddAccountView();
        showDataAccountTable();
    }// GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSaveAccount;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBoxEmployee;
    private javax.swing.JComboBox<String> comboBoxType;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbEmployee;
    private javax.swing.JLabel lbIcon;
    private javax.swing.JLabel lbPassConfirm;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbType;
    private javax.swing.JLabel lbUserName;
    private javax.swing.JRadioButton rdbtnAdd;
    private javax.swing.JRadioButton rdbtnDelete;
    private javax.swing.JTable tblAccount;
    private javax.swing.JPasswordField txtPassConfirm;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
