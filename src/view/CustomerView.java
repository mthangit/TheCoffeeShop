/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import dao.CustomerDAO;
import dao.UserDAO;
import model.CustomerModel;

/**
 *
 * @author MANH THANG
 */
public class CustomerView extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    private ArrayList<CustomerModel> listCustomer;
    private HomeView homeView;
    private UpdateCustomer updateCustomer;
    private InsertCustomerForm insertCustomerForm;

    /**
     * Creates new form CustomerView
     */
    public CustomerView() {
        initComponents();
        listCustomer = new ArrayList<>();
        tableModel = (DefaultTableModel) tblCustomers.getModel();
    }

    // public void EmlpoyeeView
    public void refreshTable() {
        tableModel.setRowCount(0);
        listCustomer.clear();
        showTable();
    }

    public void clearInput() {
        txtCustomerName.setText("");
        dateCustomerDOB.setDate(null);
        txtCustomerPhone.setText("");
        txtCustomerAddress.setText("");
        txtCustomerEmail.setText("");
        txtCustomerPoint.setText("");
        tblCustomers.clearSelection();
        btnUpdateCustomers.setEnabled(false);
        btnDeleteCustomer.setEnabled(false);
    }

    public void showTable() {
        tableModel.setRowCount(0);
        listCustomer.clear();
        listCustomer = CustomerDAO.getListCustomer();
        for (CustomerModel customer : listCustomer) {
            tableModel.addRow(new Object[] {
                    customer.getCustomerID(), customer.getCustomerName(), customer.getCustomerDOB(),
                    customer.getCustomerPoint(), customer.getCustomerRate(), customer.getCustomerPhone(),
                    customer.getCustomerEmail(), customer.getCustomerAddress(), customer.getCustomerStartDate()
            });
        }
    }

    public void showTableReverse() {
        tableModel.setRowCount(0);
        listCustomer.clear();
        listCustomer = CustomerDAO.getListCustomer();
        for (int i = listCustomer.size() - 1; i >= 0; i--) {
            CustomerModel customer = listCustomer.get(i);
            tableModel.addRow(new Object[] {
                    customer.getCustomerID(), customer.getCustomerName(), customer.getCustomerDOB(),
                    customer.getCustomerPoint(), customer.getCustomerRate(), customer.getCustomerPhone(),
                    customer.getCustomerEmail(), customer.getCustomerAddress(), customer.getCustomerStartDate()
            });
        }
    }

    public void showListData(ArrayList<CustomerModel> arrayList) {
        tableModel.setRowCount(0);
        for (CustomerModel customer : arrayList) {
            tableModel.addRow(new Object[] {
                    customer.getCustomerID(), customer.getCustomerName(), customer.getCustomerDOB(),
                    customer.getCustomerPoint(), customer.getCustomerRate(), customer.getCustomerPhone(),
                    customer.getCustomerEmail(), customer.getCustomerAddress(), customer.getCustomerStartDate()
            });
        }
    }

    public void showresult(CustomerModel customer) {
        tableModel.addRow(new Object[] {
                customer.getCustomerID(), customer.getCustomerName(), customer.getCustomerDOB(),
                customer.getCustomerPoint(), customer.getCustomerRate(), customer.getCustomerPhone(),
                customer.getCustomerEmail(), customer.getCustomerAddress(), customer.getCustomerStartDate()
        });
    }

    public void deleteTable() {
        tableModel.setRowCount(0);
    }

    public boolean isExisted(String phone) {
        for (CustomerModel customer : listCustomer) {
            if (customer.getCustomerPhone().equals(phone)) {
                return true;
            }
        }
        return false;
    }

    public void EmployeeView() {
        this.lblType.setText("Employee");
    }

    public void showDataCustomer(CustomerModel customer) {
        this.txtCustomerName.setText(customer.getCustomerName());
        this.dateCustomerDOB.setDate(customer.getCustomerDOB());
        this.txtCustomerPhone.setText(customer.getCustomerPhone());
        this.txtCustomerAddress.setText(customer.getCustomerAddress());
        this.txtCustomerEmail.setText(customer.getCustomerEmail());
        this.txtCustomerPoint.setText(String.valueOf(customer.getCustomerPoint()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbIcon = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();
        lbCustomer = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbPhone = new javax.swing.JLabel();
        txtCustomerPhone = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        txtCustomerEmail = new javax.swing.JTextField();
        lbDOB = new javax.swing.JLabel();
        dateCustomerDOB = new com.toedter.calendar.JDateChooser();
        lbAddress = new javax.swing.JLabel();
        txtCustomerAddress = new javax.swing.JTextField();
        lbPoint = new javax.swing.JLabel();
        txtCustomerPoint = new javax.swing.JTextField();
        lblType = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtCustomerName = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnDeleteCustomer = new javax.swing.JButton();
        btnDeleteTable = new javax.swing.JButton();
        btnShowData = new javax.swing.JButton();
        btnUpdateCustomers = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pinglogo.png"))); // NOI18N
        jPanel1.add(lbIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 151, 82));

        tblCustomers.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên", "Ngày sinh", "Điểm tích luỹ", "Hạng", "Số điện thoại", "Email", "Địa chỉ", "Ngày đăng ký"
            }
        ));
        tblCustomers.setRowHeight(30);
        tblCustomers.setSelectionBackground(new java.awt.Color(255, 255, 204));
        tblCustomers.setSelectionForeground(new java.awt.Color(204, 0, 0));
        tblCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCustomers);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 288, 1034, 280));

        lbCustomer.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        lbCustomer.setForeground(new java.awt.Color(204, 0, 0));
        lbCustomer.setText("QUẢN LÝ KHÁCH HÀNG");
        jPanel1.add(lbCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 46, 476, 53));

        lbName.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbName.setText("Tên khách hàng");
        jPanel1.add(lbName, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 132, 120, -1));

        lbPhone.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbPhone.setText("Số điện thoại");
        jPanel1.add(lbPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 165, 120, -1));

        txtCustomerPhone.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCustomerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPhoneActionPerformed(evt);
            }
        });
        txtCustomerPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerPhoneKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerPhoneKeyTyped(evt);
            }
        });
        jPanel1.add(txtCustomerPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 165, 287, -1));

        lbEmail.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbEmail.setText("Email");
        jPanel1.add(lbEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 197, 120, -1));

        txtCustomerEmail.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCustomerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerEmailActionPerformed(evt);
            }
        });
        jPanel1.add(txtCustomerEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 199, 287, -1));

        lbDOB.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbDOB.setText("Ngày sinh");
        jPanel1.add(lbDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 132, 76, -1));
        jPanel1.add(dateCustomerDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 132, 287, 27));

        lbAddress.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbAddress.setText("Địa chỉ");
        jPanel1.add(lbAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 165, 76, -1));

        txtCustomerAddress.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCustomerAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerAddressActionPerformed(evt);
            }
        });
        jPanel1.add(txtCustomerAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 165, 287, -1));

        lbPoint.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbPoint.setText("Điểm");
        jPanel1.add(lbPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 197, 76, 26));

        txtCustomerPoint.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCustomerPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPointActionPerformed(evt);
            }
        });
        jPanel1.add(txtCustomerPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 199, 287, -1));

        lblType.setFont(new java.awt.Font("Open Sans", 2, 16)); // NOI18N
        lblType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblType.setText("Admin");
        lblType.setToolTipText("");
        jPanel1.add(lblType, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, 72, -1));

        btnAdd.setBackground(new java.awt.Color(255, 255, 204));
        btnAdd.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(204, 0, 0));
        btnAdd.setText("Thêm khách hàng");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(857, 134, 190, 40));

        btnBack.setBackground(new java.awt.Color(255, 255, 204));
        btnBack.setFont(new java.awt.Font("Open Sans", 1, 15)); // NOI18N
        btnBack.setText("Trở về");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, -1, -1));

        txtCustomerName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 132, 287, -1));

        btnClear.setBackground(new java.awt.Color(255, 204, 204));
        btnClear.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnClear.setText("Xoá thông tin nhập");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(857, 186, 190, 39));

        btnDeleteCustomer.setBackground(new java.awt.Color(200, 229, 255));
        btnDeleteCustomer.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnDeleteCustomer.setText("Xoá khách hàng");
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 243, 140, -1));

        btnDeleteTable.setBackground(new java.awt.Color(202, 255, 231));
        btnDeleteTable.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnDeleteTable.setText("Xoá bảng");
        btnDeleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTableActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 243, 150, -1));

        btnShowData.setBackground(new java.awt.Color(255, 204, 153));
        btnShowData.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnShowData.setText("Hiển thị dữ liệu");
        btnShowData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDataActionPerformed(evt);
            }
        });
        jPanel1.add(btnShowData, new org.netbeans.lib.awtextra.AbsoluteConstraints(848, 243, 150, -1));

        btnUpdateCustomers.setBackground(new java.awt.Color(204, 204, 255));
        btnUpdateCustomers.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnUpdateCustomers.setText("Cập nhật");
        btnUpdateCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomersActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdateCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 243, 150, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customerbg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 590));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustomerPhoneKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtCustomerPhoneKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) || this.txtCustomerPhone.getText().length() >= 10) {
            evt.consume();
        } // Không cho phép nhập ký tự và vượt quá độ dài 10

    }// GEN-LAST:event_txtCustomerPhoneKeyTyped

    private void tblCustomersMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblCustomersMouseClicked
        // TODO add your handling code here:
        int row = tblCustomers.getSelectedRow();
        String id = tblCustomers.getValueAt(row, 0).toString();
        showDataCustomer(CustomerDAO.getCustomerByID(Integer.parseInt(id)));
        if (row != -1) {
            this.btnUpdateCustomers.setEnabled(true);
            this.btnDeleteCustomer.setEnabled(true);
        } else {
            this.btnUpdateCustomers.setEnabled(false);
        }
    }// GEN-LAST:event_tblCustomersMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        showTable();
        this.btnUpdateCustomers.setEnabled(false);
        this.txtCustomerName.setEditable(false);
        this.dateCustomerDOB.setEnabled(false);
        this.txtCustomerPhone.setEditable(true);
        this.txtCustomerAddress.setEditable(false);
        this.txtCustomerEmail.setEditable(false);
        this.txtCustomerPoint.setEditable(false);
        this.btnDeleteCustomer.setEnabled(false);

    }// GEN-LAST:event_formComponentShown

    private void txtCustomerPhoneKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtCustomerPhoneKeyReleased
        // TODO add your handling code here:
        String phone = txtCustomerPhone.getText();
        ArrayList<CustomerModel> list = CustomerDAO.getListCustomerByPhone(phone);
        showListData(list);
        if (this.txtCustomerPhone.getText().length() == 10 && list.size() == 0) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng");
        }
    }// GEN-LAST:event_txtCustomerPhoneKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát chương trình?", "Thông báo thoát",
                JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        } else {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }// GEN-LAST:event_formWindowClosing

    private void txtCustomerPhoneActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCustomerPhoneActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCustomerPhoneActionPerformed

    private void txtCustomerAddressActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCustomerAddressActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCustomerAddressActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        insertCustomerForm = new InsertCustomerForm(this, true);
        insertCustomerForm.setVisible(true);

        // if (txtCustomerAddress.getText().equals("") || txtCustomerDOB.getDate() ==
        // null
        // || txtCustomerEmail.getText().equals("") ||
        // txtCustomerName.getText().equals("")
        // || txtCustomerPhone.getText().equals("") ||
        // txtCustomerPoint.getText().equals("")) {
        // JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập đầy đủ thông tin",
        // "Thông báo thêm khách hàng",
        // JOptionPane.ERROR_MESSAGE);
        // } else if (txtCustomerPhone.getText().length() > 10) {
        // JOptionPane.showMessageDialog(rootPane, "Số điện thoại khách hàng không hợp
        // lệ",
        // "Thông báo thêm khách hàng", JOptionPane.ERROR_MESSAGE);
        // } else if (isExisted(txtCustomerPhone.getText())) {
        // JOptionPane.showMessageDialog(rootPane, "Số điện thoại đã tồn tại", "Thông
        // báo thêm khách hàng",
        // JOptionPane.ERROR_MESSAGE);
        // } else {
        // CustomerModel customer = new CustomerModel();
        // customer.setCustomerName(txtCustomerName.getText());
        // customer.setCustomerDOB(new
        // java.sql.Date(txtCustomerDOB.getDate().getTime()));
        // customer.setCustomerPhone(txtCustomerPhone.getText());
        // customer.setCustomerAddress(txtCustomerAddress.getText());
        // customer.setCustomerEmail(txtCustomerEmail.getText());
        // customer.setCustomerStartDate(new java.sql.Date(System.currentTimeMillis()));
        // int customerPoint = Integer.parseInt(txtCustomerPoint.getText());
        // customer.setCustomerPoint(customerPoint);
        // String customerRate;
        // if (customerPoint < 150) {
        // customerRate = "Member";
        // } else if (customerPoint < 300) {
        // customerRate = "Silver";
        // } else {
        // customerRate = "Gold";
        // }
        // customer.setCustomerRate(customerRate);
        // if (new CustomerDAO().addCustomer(customer)) {
        // JOptionPane.showMessageDialog(rootPane, "Thêm khách hàng thành công", "Thông
        // báo thêm khách hàng",
        // JOptionPane.INFORMATION_MESSAGE);
        // refreshTable();
        // } else {
        // JOptionPane.showMessageDialog(rootPane, "Thêm khách hàng thất bại", "Thông
        // báo thêm khách hàng",
        // JOptionPane.ERROR_MESSAGE);
        // }
        // }

    }// GEN-LAST:event_btnAddActionPerformed

    private void txtCustomerEmailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCustomerEmailActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCustomerEmailActionPerformed

    private void txtCustomerPointActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCustomerPointActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCustomerPointActionPerformed

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCustomerNameActionPerformed

    // private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchActionPerformed
    //     // TODO add your handling code here:
    //     if (txtCustomerPhone.getText().equals("")) {
    //         JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập số điện thoại khách hàng", "Thông báo tìm kiếm",
    //                 JOptionPane.ERROR_MESSAGE);
    //     } else if (txtCustomerPhone.getText().length() > 10) {
    //         JOptionPane.showMessageDialog(rootPane, "Số điện thoại khách hàng không hợp lệ", "Thông báo tìm kiếm",
    //                 JOptionPane.ERROR_MESSAGE);
    //     } else {
    //         String customerPhone = txtCustomerPhone.getText();
    //         CustomerModel customer = new CustomerDAO().getCustomerByPhone(customerPhone);
    //         if (customer == null) {
    //             JOptionPane.showMessageDialog(rootPane, "Không tìm thấy khách hàng", "Thông báo tìm kiếm",
    //                     JOptionPane.ERROR_MESSAGE);
    //         } else {
    //             deleteTable();
    //             showresult(customer);
    //         }
    //     }
    // }// GEN-LAST:event_btnSearchActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearInput();
    }// GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int removeIndex = tblCustomers.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Chọn khách hàng muốn xoá");
        } else if (listCustomer.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để xoá");
        } else {
            int a = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn xoá khách hàng này không?",
                    "Xoá khách hàng", JOptionPane.YES_NO_OPTION);
            if (a == JOptionPane.YES_OPTION) {
                int customerID = Integer.parseInt(tblCustomers.getValueAt(removeIndex, 0).toString());
                CustomerModel customer = CustomerDAO.getCustomerByID(customerID);
                boolean isRemoved = CustomerDAO.removeCustomer(customer);
                if (isRemoved) {
                    JOptionPane.showMessageDialog(rootPane, "Đã xoá thông tin khách hàng thành công");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Xoá thông tin khách hàng thất bại");
                }
                refreshTable();
            }
        }
    }// GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateCustomersActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRefreshTableActionPerformed
        // TODO add your handling code here:
        updateCustomer = new UpdateCustomer(this, true);
        int updateIndex = tblCustomers.getSelectedRow();
        if (updateIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Chọn khách hàng muốn cập nhật");
        } else if (listCustomer.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để cập nhật");
        } else {
            int customerID = Integer.parseInt(tblCustomers.getValueAt(updateIndex, 0).toString());
            updateCustomer.setCustomer(customerID);
            updateCustomer.setVisible(true);
            refreshTable();
        }
    }// GEN-LAST:event_btnRefreshTableActionPerformed

    private void btnDeleteTableActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        deleteTable();
    }// GEN-LAST:event_jButton6ActionPerformed

    private void btnShowDataActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnShowDataActionPerformed
        // TODO add your handling code here:
        showTableReverse();
    }// GEN-LAST:event_btnShowDataActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        homeView = new HomeView();
        if (UserDAO.getType().equals("employee")) {
            homeView.EmployeeView();
        }
        homeView.setVisible(true);
        this.dispose();
    }// GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnDeleteTable;
    private javax.swing.JButton btnShowData;
    private javax.swing.JButton btnUpdateCustomers;
    private com.toedter.calendar.JDateChooser dateCustomerDOB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbCustomer;
    private javax.swing.JLabel lbDOB;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbIcon;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPhone;
    private javax.swing.JLabel lbPoint;
    private javax.swing.JLabel lblType;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JTextField txtCustomerAddress;
    private javax.swing.JTextField txtCustomerEmail;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerPhone;
    private javax.swing.JTextField txtCustomerPoint;
    // End of variables declaration//GEN-END:variables
}
